{"version":3,"sources":["generate-code.js","grid.jsx","App.js","reportWebVitals.js","index.js"],"names":["GenerateCodeLine","row","value","Grid","props","grid","useState","isDragging","setIsDragging","currentBrush","setCurrentBrush","onGridClick","e","el","target","i","getAttribute","j","startChangeGrid","updateGrid","onMouseUp","doneChangeGrid","onGridCellEnter","slowMode","debounce","trailing","cellSpacing","onMouseLeave","range","gridLen","map","className","draggable","data-id-row","data-id-col","onMouseOver","onMouseDown","style","background","baseGrid","renderTooltip","Tooltip","id","latestSnapshot","inTransaction","App","setGridBase","prev","next","history","updateHistory","setSlowMode","undoFn","useRef","useEffect","document","addEventListener","event","ctrlKey","key","current","preventDefault","setGrid","newGrid","undoDisabled","length","undo","prevGrid","pop","push","slice","code","binary","isNegative","oneComplement","k","GenerateBitMapCode","Jumbotron","Container","Row","marginBottom","marginTop","Col","md","offset","span","val","dup","c","display","alignItems","height","readOnly","width","Button","variant","onClick","reverse","OverlayTrigger","placement","delay","show","hide","overlay","paddingTop","disabled","prevUndoGrid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sSA4CA,SAASA,EAAiBC,EAAKC,GAE7B,MADY,+BAAuC,GAAND,EAAW,KAAOC,EAAQ,O,WCxC5DC,EAAO,SAACC,GACnB,IAAMC,EAAOD,EAAMC,KAEnB,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAGMC,EAAc,SAACC,GAEnB,IAAMC,EAAKD,EAAEE,OACPC,EAAIF,EAAGG,aAAa,eACpBC,EAAIJ,EAAGG,aAAa,eAC1BN,GAAkBL,EAAKU,GAAGE,IAC1Bb,EAAMc,kBACNd,EAAMe,WAAWJ,EAAGE,GAAIZ,EAAKU,GAAGE,IAChCT,GAAc,IAGVY,EAAY,WAChBZ,GAAc,GACdJ,EAAMiB,kBAIJC,EAAiB,SAACV,GACpB,IAAMC,EAAKD,EAAEE,OACPC,EAAIF,EAAGG,aAAa,eACpBC,EAAIJ,EAAGG,aAAa,eACtBT,GACEF,EAAKU,GAAGE,KAAOR,GACjBL,EAAMe,WAAWJ,EAAGE,EAAGR,IAU7B,OALIL,EAAMmB,WACRD,EAAmBE,mBAASF,EAAkB,GAAI,CAACG,UAAU,KAK7D,8BACE,wBAAOC,YAAa,EAAGN,UAAWA,EAAWO,aAAcP,EAA3D,UACE,gCACE,6BACGQ,gBAAM,EAAGC,IAAaC,KAAI,SAACf,GAAD,OACzB,oBAAIgB,UAAU,cAAiCC,WAAW,EAA1D,SACGjB,GAAQ,IADsB,SAAWA,UAMlD,gCACGa,gBAxDK,IAwDUE,KAAI,SAACf,GAAD,OAClB,qBAAsBiB,WAAW,EAAjC,UACE,oBAAID,UAAU,cAAqCC,WAAW,EAA9D,SACGjB,EAAI,GAD0B,YAAcA,GAI9Ca,gBA9DC,IA8DcE,KAAI,SAACb,GAAD,OAClB,oBACEc,UAAU,OAEVE,cAAalB,EACbmB,cAAajB,EACbkB,YAAab,EACbc,YAAazB,EACb0B,MAAO,CAAEC,WAAYjC,EAAKU,GAAGE,GAAK,QAAU,UAP9C,cAEcF,EAFd,YAEmBE,SARd,OAASF,cC7CxBwB,EAAWX,gBAAM,IAAIE,KAAI,kBAAMF,gBAAM,IAAIE,KAAI,kBAAM,QAEnDU,EAAgB,SAACpC,GAAD,OACpB,cAACqC,EAAA,EAAD,yBAASC,GAAG,kBAAqBtC,GAAjC,8CAKEuC,EAAiB,KACjBC,GAAgB,EAyMLC,MAvMf,WACE,MAA4BvC,mBAASiC,GAArC,mBAAOlC,EAAP,KAAayC,EAAb,KACA,EAAiCxC,mBAAS,CAAEyC,KAAM,GAAIC,KAAM,KAA5D,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAgC5C,oBAAS,GAAzC,mBAAOiB,EAAP,KAAiB4B,EAAjB,KACMC,EAASC,iBAAO,MACtBC,qBAAU,WACRC,SAASC,iBAAiB,WAAW,SAAUC,GACzCA,EAAMC,SAAyB,MAAdD,EAAME,MACzBP,EAAOQ,UACPH,EAAMI,uBAGT,IAEH,IAAMC,EAAU,SAACC,GACf7C,IACA4B,EAAYiB,GACZ1C,KAII2C,EAAe,kBAAOf,EAAQF,KAAKkB,QAGnCC,EAAO,WACX,IAAKF,IAAgB,CACnB,IAAMG,EAAWlB,EAAQF,KAAKqB,MAC9BnB,EAAQD,KAAKqB,KAAKhE,GAClByC,EAAYqB,GACZjB,EAAc,eAAKD,MAGvBG,EAAOQ,QAAUM,EAEjB,IAYMhD,EAAkB,WACjB0B,IACHA,GAAgB,EAChBD,EAAiBtC,IAIfgB,EAAiB,WACjBuB,IAC0B,KAAxBK,EAAQF,KAAKkB,SACfhB,EAAQF,KAAOE,EAAQF,KAAKuB,MAAM,IAGpCrB,EAAQF,KAAKsB,KAAK1B,GAClBM,EAAQD,KAAO,GACfE,EAAc,eAAKD,IACnBL,GAAgB,IAId2B,EF5FD,SAA4BlE,GACjC,IAAIU,EAAGE,EAEHsD,EACF,2EAGF,IAAKxD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEvB,IAAIyD,EAAS,GACb,IAAKvD,EAAI,EAAGA,EAAI,GAAIA,IACFuD,EAAZnE,EAAKU,GAAGE,GAAa,IAAMuD,EACjB,IAAMA,EAGtB,IAAIC,GAAa,EAEjB,GAAkB,MAAdD,EAAO,GAAY,CACrBC,GAAa,EAEb,IADA,IAAIC,EAAgB,GACXC,EAAI,EAAGA,EAAI,GAAIA,IACJ,MAAdH,EAAOG,GAAYD,GAAgC,IAClDA,GAAgC,IAEvCF,EAASE,EAKX,IADA,IAAIxE,EAAQ,EACHyE,EAAI,EAAGA,EAAI,GAAIA,IACtBzE,GAAgB,EACE,MAAdsE,EAAOG,KAAYzE,GAAgB,IAItB,IAAfuE,IAAqBvE,IAAUA,EAAQ,IAE3CqE,GAAQvE,EAAiBe,EAAGb,GAI9B,OADAqE,EAAQ,eEoDKK,CAAmBvE,GAqChC,OACE,sBAAK0B,UAAU,MAAf,UACE,cAAC8C,EAAA,EAAD,UACE,oBAAI7C,WAAW,EAAf,6BAEF,eAAC8C,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAK1C,MAAO,CAAE2C,aAAc,GAAIC,UAAW,IAA3C,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,OAAQ,EAAGC,KAAM,GAA5B,SACE,cAAC,EAAD,CACEhF,KAAMA,EACNc,WA7CO,SAACJ,EAAGE,EAAGqE,GACxB,IAAMC,EAAMlF,EAAKyB,KAAI,SAAC7B,GAAD,OAASA,EAAI6B,KAAI,SAAC0D,GAAD,OAAOA,QAC7CD,EAAIxE,GAAGE,GAAKqE,EACZxC,EAAYyC,IA2CFhE,SAAUA,EACVL,gBAAiBA,EACjBG,eAAgBA,MAGpB,cAAC6D,EAAA,EAAD,UACE,qBACE7C,MAAO,CAAEoD,QAAS,OAAQC,WAAY,SAAUC,OAAQ,QAD1D,SAGE,0BACEzF,MAAOqE,EACPqB,UAAQ,EACRvD,MAAO,CAAEsD,OAAQ,MAAOE,MAAO,gBAKvC,cAACd,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAAKC,GAAI,CAAEC,OAAQ,EAAGC,KAAM,GAA5B,SACE,eAACP,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,UACE,cAACY,EAAA,EAAD,CAAQC,QAAQ,SAASC,QA9D3B,WACZlC,EAAQvB,IA6DM,qBAIF,cAAC2C,EAAA,EAAD,UACE,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QA/D5B,WACd,IAAMC,EAAU5F,EAAKyB,KAAI,SAAC7B,GAAD,OAASA,EAAI6B,KAAI,SAAC0D,GAAD,OAAQA,QAClD1B,EAAQmC,IA6DM,uBAIF,cAACf,EAAA,EAAD,UACE,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QA/D7B,WAEb,IADA,IAAMT,EAAMlF,EAAKyB,KAAI,SAAC7B,GAAD,OAASA,EAAI6B,KAAI,SAAC0D,GAAD,OAAOA,QACpCzE,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IACtBsE,EAAItE,GAAG,GAAKF,GAAKV,EAAKU,GAAGE,GAG7B6C,EAAQyB,IAwDM,sBAIF,cAACL,EAAA,EAAD,UACE,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QA1D7B,WAEb,IADA,IAAMT,EAAMlF,EAAKyB,KAAI,SAAC7B,GAAD,OAASA,EAAI6B,KAAI,SAAC0D,GAAD,OAAOA,QACpCzE,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IACtBsE,EAAIxE,GAAG,GAAKE,GAAKZ,EAAKU,GAAGE,GAG7B6C,EAAQyB,IAmDM,sBAIF,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACe,EAAA,EAAD,CACEC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QAAS/D,EAHX,SAKE,cAACsD,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS,kBAAM7C,GAAa5B,IAF9B,SAIGA,EAAW,oBAAsB,4BAK1C,eAACwD,EAAA,EAAD,CAAK1C,MAAO,CAAEmE,WAAY,IAA1B,UACE,cAACtB,EAAA,EAAD,UACE,cAACY,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS9B,EACTuC,SAAUzC,IAHZ,oBAQF,cAACkB,EAAA,EAAD,UACE,cAACY,EAAA,EAAD,CACEC,QAAQ,YACRC,QArJL,WACX,IAAMU,EAAezD,EAAQD,KAAKoB,MACN,KAAxBnB,EAAQF,KAAKkB,SACfhB,EAAQF,KAAOE,EAAQF,KAAKuB,MAAM,IAGpCrB,EAAQF,KAAKsB,KAAKhE,GAClByC,EAAY4D,GACZxD,EAAc,eAAKD,KA8IHwD,UAlKUxD,EAAQD,KAAKiB,OA+JzB,qCCnMH0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/D,SAASgE,eAAe,SAM1BZ,M","file":"static/js/main.102ae392.chunk.js","sourcesContent":["export function GenerateBitMapCode(grid) {\n  let i, j;\n\n  let code =\n    \"function void draw\" +\n    \"(int location) {\\n\\tlet memAddress = 16384+location;\\n\";\n\n  for (i = 0; i < 16; i++) {\n    //get grid binary representation\n    let binary = \"\";\n    for (j = 0; j < 16; j++) {\n      if (grid[i][j]) binary = \"1\" + binary;\n      else binary = \"0\" + binary;\n    }\n\n    let isNegative = false;\n    //if number is negative, get its  one's complement\n    if (binary[0] === \"1\") {\n      isNegative = true;\n      let oneComplement = \"\";\n      for (let k = 0; k < 16; k++) {\n        if (binary[k] === \"1\") oneComplement = oneComplement + \"0\";\n        else oneComplement = oneComplement + \"1\";\n      }\n      binary = oneComplement;\n    }\n\n    //calculate one's complement decimal value\n    let value = 0;\n    for (let k = 0; k < 16; k++) {\n      value = value * 2;\n      if (binary[k] === \"1\") value = value + 1;\n    }\n\n    //two's complement value if it is a negative value\n    if (isNegative === true) value = -(value + 1);\n\n    code += GenerateCodeLine(i, value);\n  }\n\n  code += \"\\treturn;\\n}\";\n  return code;\n}\n\nfunction GenerateCodeLine(row, value) {\n  const str = \"\\tdo Memory.poke(memAddress+\" + row * 32 + \", \" + value + \");\\n\";\n  return str;\n}\n","import { range, debounce } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nconst gridLen = 16;\n\n\nexport const Grid = (props) => {\n  const grid = props.grid;\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [currentBrush, setCurrentBrush] = useState(false);\n\n\n  const onGridClick = (e) => {\n    /** @type HTMLElement */\n    const el = e.target;\n    const i = el.getAttribute(\"data-id-row\");\n    const j = el.getAttribute(\"data-id-col\");\n    setCurrentBrush( !grid[i][j]);\n    props.startChangeGrid();\n    props.updateGrid(i, j, !grid[i][j]);\n    setIsDragging(true);\n  };\n\n  const onMouseUp = () => {\n    setIsDragging(false);\n    props.doneChangeGrid();\n  };\n\n\n  let onGridCellEnter =(e) => {\n    const el = e.target;\n    const i = el.getAttribute(\"data-id-row\");\n    const j = el.getAttribute(\"data-id-col\");\n    if (isDragging) {\n      if (grid[i][j] !== currentBrush) {\n        props.updateGrid(i, j, currentBrush);\n      }\n    }\n  };\n\n  if (props.slowMode) {\n    onGridCellEnter =  debounce(onGridCellEnter,  50, {trailing: true});\n  }\n  \n\n  return (\n    <div>\n      <table cellSpacing={0} onMouseUp={onMouseUp} onMouseLeave={onMouseUp}>\n        <thead>\n          <tr>\n            {range(0, gridLen + 1).map((i) => (\n              <th className=\"header-cell\" key={\"header\" + i} draggable={false}>\n                {i ? i : \"\"}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {range(gridLen).map((i) => (\n            <tr key={\"row_\" + i}  draggable={false}>\n              <th className=\"header-cell\" key={\"rowHeader\" + i}  draggable={false}>\n                {i + 1}\n              </th>\n\n              {range(gridLen).map((j) => (\n                <td\n                  className=\"cell\"\n                  key={`cell${i}_${j}`}\n                  data-id-row={i}\n                  data-id-col={j}\n                  onMouseOver={onGridCellEnter}\n                  onMouseDown={onGridClick}\n                  style={{ background: grid[i][j] ? \"black\" : \"white\" }}\n                ></td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { range } from \"lodash\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Jumbotron,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from \"react-bootstrap\";\nimport \"./App.css\";\nimport { GenerateBitMapCode } from \"./generate-code\";\nimport { Grid } from \"./grid\";\nconst baseGrid = range(16).map(() => range(16).map(() => false));\n\nconst renderTooltip = (props) => (\n  <Tooltip id=\"button-tooltip\" {...props}>\n    good for drawing diagonals\n  </Tooltip>\n);\n\nlet latestSnapshot = null;\nlet inTransaction = false;\n\nfunction App() {\n  const [grid, setGridBase] = useState(baseGrid);\n  const [history, updateHistory] = useState({ prev: [], next: [] });\n\n  const [slowMode, setSlowMode] = useState(false);\n  const undoFn = useRef(null);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", function (event) {\n      if (event.ctrlKey && event.key === \"z\") {\n        undoFn.current();\n        event.preventDefault();\n      }\n    });\n  }, []);\n\n  const setGrid = (newGrid) => {\n    startChangeGrid();\n    setGridBase(newGrid);\n    doneChangeGrid();\n  };\n\n\n  const undoDisabled = () => !history.prev.length;\n  const redoDisabled = () => !history.next.length;\n\n  const undo = () => {\n    if (!undoDisabled()) {\n      const prevGrid = history.prev.pop();\n      history.next.push(grid);\n      setGridBase(prevGrid);\n      updateHistory({ ...history });\n    }\n  };\n  undoFn.current = undo;\n\n  const redo = () => {\n    const prevUndoGrid = history.next.pop();\n    if (history.prev.length === 20) {\n      history.prev = history.prev.slice(1);\n    }\n\n    history.prev.push(grid);\n    setGridBase(prevUndoGrid);\n    updateHistory({ ...history });\n  };\n\n\n  const startChangeGrid = () => {\n    if (!inTransaction) {\n      inTransaction = true;\n      latestSnapshot = grid;\n    }\n  };\n\n  const doneChangeGrid = () => {\n    if (inTransaction) {\n      if (history.prev.length === 20) {\n        history.prev = history.prev.slice(1);\n      }\n\n      history.prev.push(latestSnapshot);\n      history.next = [];\n      updateHistory({ ...history });\n      inTransaction = false;\n    }\n  };\n\n  const code = GenerateBitMapCode(grid);\n\n  const updateGrid = (i, j, val) => {\n    const dup = grid.map((row) => row.map((c) => c));\n    dup[i][j] = val;\n    setGridBase(dup);\n  };\n\n  const clear = () => {\n    setGrid(baseGrid);\n  };\n\n  const reverse = () => {\n    const reverse = grid.map((row) => row.map((c) => !c));\n    setGrid(reverse);\n  };\n\n  const rotate = () => {\n    const dup = grid.map((row) => row.map((c) => c));\n    for (let i = 0; i < 16; i++) {\n      for (let j = 0; j < 16; j++) {\n        dup[j][15 - i] = grid[i][j];\n      }\n    }\n    setGrid(dup);\n  };\n\n  const mirror = () => {\n    const dup = grid.map((row) => row.map((c) => c));\n    for (let i = 0; i < 16; i++) {\n      for (let j = 0; j < 16; j++) {\n        dup[i][15 - j] = grid[i][j];\n      }\n    }\n    setGrid(dup);\n  };\n\n  return (\n    <div className=\"App\">\n      <Jumbotron>\n        <h1 draggable={false}>Bitmap editor</h1>\n      </Jumbotron>\n      <Container>\n        <Row style={{ marginBottom: 50, marginTop: 50 }}>\n          <Col md={{ offset: 0, span: 6 }}>\n            <Grid\n              grid={grid}\n              updateGrid={updateGrid}\n              slowMode={slowMode}\n              startChangeGrid={startChangeGrid}\n              doneChangeGrid={doneChangeGrid}\n            ></Grid>\n          </Col>\n          <Col>\n            <div\n              style={{ display: \"flex\", alignItems: \"center\", height: \"100%\" }}\n            >\n              <textarea\n                value={code}\n                readOnly\n                style={{ height: \"95%\", width: \"95%\" }}\n              ></textarea>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={{ offset: 2, span: 8 }}>\n            <Container>\n              <Row>\n                <Col>\n                  <Button variant=\"danger\" onClick={clear}>\n                    Clear\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"secondary\" onClick={reverse}>\n                    Reverse\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"secondary\" onClick={rotate}>\n                    Rotate\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"secondary\" onClick={mirror}>\n                    Mirror\n                  </Button>\n                </Col>\n                <Col md={4}>\n                  <OverlayTrigger\n                    placement=\"right\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={renderTooltip}\n                  >\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => setSlowMode(!slowMode)}\n                    >\n                      {slowMode ? \"Disable slow mode\" : \"Enable Slow Mode\"}\n                    </Button>\n                  </OverlayTrigger>\n                </Col>\n              </Row>\n              <Row style={{ paddingTop: 24 }}>\n                <Col>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={undo}\n                    disabled={undoDisabled()}\n                  >\n                    Undo\n                  </Button>\n                </Col>\n                <Col>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={redo}\n                    disabled={redoDisabled()}\n                  >\n                    Redo\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}